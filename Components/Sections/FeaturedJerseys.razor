@using MaillotStore.Data
@using MaillotStore.Models
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<ApplicationDbContext> DbFactory

<div class="full-width-section featured-jerseys-container">
    <div class="container py-5">
        <h2 class="text-center mb-5 text-white">Featured Jerseys</h2>

        <div class="row">
            @if (_featuredProducts == null)
            {
                <p class="text-white"><em>Loading jerseys...</em></p>
            }
            else if (!_featuredProducts.Any())
            {
                <p class="text-white text-center"><em>No featured products have been set yet.</em></p>
            }
            else
            {
                @foreach (var product in _featuredProducts)
                {
                    <ProductCard Product="product" />
                }
            }
        </div>
    </div>
</div>

@code {
    private List<Product> _featuredProducts;

    protected override async Task OnInitializedAsync()
    {
        // Use the DbContextFactory for a fresh, reliable connection
        await using var dbContext = DbFactory.CreateDbContext();

        // The .Take(4) has been removed to show all featured products.
        _featuredProducts = await dbContext.Products
                                           .Where(p => p.IsFeatured)
                                           .ToListAsync();
    }
}