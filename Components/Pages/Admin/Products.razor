@page "/admin/products"
@using MaillotStore.Components
@using MaillotStore.Data
@using MaillotStore.Models
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext DbContext
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject IWebHostEnvironment WebHostEnvironment

<div class="d-flex admin-dashboard-container">
    <AdminSidebar />
    <div class="main-content-dashboard flex-grow-1 p-5">
        <h1 class="text-white fw-bold mb-5">Product List</h1>
        <div class="d-flex justify-content-end mb-4">
            <button class="btn btn-primary" @onclick="GoToAddProduct">Add New Product</button>
        </div>
        <table class="table table-bordered text-white admin-table">
            <thead>
                <tr>
                    <th scope="col">S/N</th>
                    <th scope="col">Product Name</th>
                    <th scope="col">Price</th>
                    <th scope="col">Stock</th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody>
                @if (_products == null)
                {
                    <tr><td colspan="5"><em>Loading...</em></td></tr>
                }
                else
                {
                    var serialNumber = 1;
                    @foreach (var product in _products)
                    {
                        <tr>
                            <th scope="row">@(serialNumber++)</th>
                            <td>@product.Name</td>
                            <td>@product.Price.ToString("C")</td>
                            <td>@product.StockQuantity</td>
                            <td>
                                <a href="/admin/edit-product/@product.Id" class="btn btn-sm btn-info me-2">Edit</a>
                                <button class="btn btn-sm btn-danger" @onclick="() => DeleteProduct(product)">Delete</button>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        <nav aria-label="Product page navigation" class="d-flex justify-content-center mt-5 mb-5">
            <ul class="pagination">
                <li class="page-item"><a class="page-link" href="#">Previous</a></li>
                <li class="page-item"><a class="page-link" href="#">1</a></li>
                <li class="page-item"><a class="page-link" href="#">2</a></li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>
                <li class="page-item"><a class="page-link" href="#">Next</a></li>
            </ul>
        </nav>
    </div>
</div>

@code {
    private List<Product> _products;

    protected override async Task OnInitializedAsync()
    {
        await LoadProducts();
    }

    private async Task LoadProducts()
    {
        _products = await DbContext.Products.OrderByDescending(p => p.Id).ToListAsync();
    }

    private void GoToAddProduct()
    {
        NavigationManager.NavigateTo("/admin/add-product");
    }

    private async Task DeleteProduct(Product productToDelete)
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", $"Are you sure you want to delete '{productToDelete.Name}'?");
        if (confirmed)
        {
            if (!string.IsNullOrEmpty(productToDelete.ImageUrl) && !productToDelete.ImageUrl.StartsWith("http"))
            {
                var filePath = Path.Combine(WebHostEnvironment.WebRootPath, productToDelete.ImageUrl.TrimStart('/'));
                if (File.Exists(filePath))
                {
                    File.Delete(filePath);
                }
            }

            DbContext.Products.Remove(productToDelete);
            await DbContext.SaveChangesAsync();
            await LoadProducts();
        }
    }
}